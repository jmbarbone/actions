name: 'r-check-version'
description: 'Action to check R that pull request has a new version in DESCRIPTION and NEWS.md'
author: 'jmbarbone'
inputs:
  ignore-dev-version:
    description: 'Ignore dev version in NEWS.md'
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - name: Check versions
      id: rcheckversion
      run: |
        library(gh)
        library(fuj)

        res <- NULL

        cat("::group::Getting files\n")
        get_pull <- gh("GET https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files")
        files <- vapply(get_pull, subset2, NA_character_, "filename")
        cat("::endgroup::\n")

        if ("NEWS.md" %out% files) {
          res <- c(res, "NEWS.md is missing")
        }

        if ("DESCRIPTION" %out% files ) {
          res <- c(res, "DESCRIPTION is missing")
        }

        if (!is.null(res)) {
          return(res)
        }

        cat("::group::Checking old and new versinos\n")

        old_version <- 
          gh("GET https://api.github.com/repos/${{ github.repository }}/contents/DESCRIPTION") |> 
          # could add fail check here
          subset2("download_url") |> 
          url() |> 
          read.dcf() |> 
          subset(, "Version") |> 
          # could add fail check here
          as.package_version()

        desc_url <- 
          get_pull[[which(files == "NEWS.md")]] |>
          subset2("contents_url")

        new_version <- 
          gh(paste("GET", desc_url)) |>
          # could add fail check here
          subset2("download_url") |>
          url() |> 
          read.dcf() |> 
          subset(, "Version") |> 
          # could add fail check here
          as.package_version()

        if (new_version <= old_version) {
          res <- c(res, "Version is not incremented")
        }

        cat("::endgroup::\n")

        cat("::group::Checking NEWS.md\n")

        news_url <- 
          get_pull[[which(files == "NEWS.md")]] |>
          subset2("contents_url")

        news_contents <- 
          gh(paste("GET", news_url)) |>
          # could add fail check here
          subset2("download_url") |>
          url() |> 
          readLines()


        ignore_news <- 
          ${{ inputs.ignore-dev-version }} == "true" && 
          grepl("(development version)", news_contents, fixed = TRUE) 

        if (!ignore_news && length(grep(format(old_version), news_contents))) {
          res <- c(res, "NEWS.md does not contain new version")
        }

        cat("::endgroup::\n")

        if (length(res)) {
          stop(collapse("Found the following issues", issues, sep = "\n  >> "))
        }
      shell: Rscript {0}
      working-directory: ${{ inputs.working-directory }}
